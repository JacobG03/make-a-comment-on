{"version":3,"sources":["services/PostData.js","context/VideoContext.jsx","hooks/windowDimensions.js","App.js","index.js"],"names":["a","url","data","fetch","window","location","origin","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","postData","VideoContext","createContext","VideoContextProvider","children","useState","URL","setURL","videoData","setVideoData","useEffect","then","result","success","changeURL","useCallback","addComment","comment","videoID","contextValue","useMemo","Provider","value","getWindowDimensions","width","innerWidth","height","innerHeight","CommentSection","props","videoContext","className","MakeComment","Comments","comments","useForm","register","handleSubmit","onSubmit","required","maxLength","type","sort","b","id","map","Comment","username","date","LinkInput","link","VideoPlayer","opts","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","videoId","App","useContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.156ceb15.chunk.js","sourcesContent":["async function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(`${window.location.origin}/${url}`, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\nexport default postData;","import React, { \n  createContext, \n  useState, \n  useCallback,\n  useMemo,\n  useEffect,\n} from \"react\";\nimport postData from \"../services/PostData\";\n\nconst VideoContext = createContext();\n\nconst VideoContextProvider = ({ children }) => {\n  const [URL, setURL] = useState(null)\n  const [videoData, setVideoData] = useState(null)\n\n  // On url change update video data\n  useEffect(() => {\n    if (URL) {\n      postData('api/video', {'url': URL})\n      .then(result => {\n        if(result.success) {\n          setVideoData(result['data'])\n        }\n      })\n    }\n  }, [URL])\n  \n  const changeURL = useCallback(url => {\n    setURL(url)\n  }, [])\n\n  const addComment = useCallback(comment => {\n    if (videoData !== null) {\n      postData('api/comment', {\n        'videoID': videoData.videoID,\n        'comment': comment\n      })\n      .then(result => {\n        if (result.success) {\n          postData('api/video', {'url': URL})\n          .then(result => {\n            if(result.success) {\n              setVideoData(result['data'])\n            }\n          })\n        }\n      })\n    }\n  }, [videoData, URL])\n\n\n  const contextValue = useMemo(() => ({\n    URL,\n    changeURL,\n    videoData,\n    addComment\n  }), [URL, changeURL, videoData, addComment])\n\n  return (\n    <VideoContext.Provider value={contextValue}>\n      {children}\n    </VideoContext.Provider>\n  );\n};\n\n\nexport { VideoContext, VideoContextProvider };","import { useState, useEffect } from 'react';\n\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import './App.css';\nimport { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form'\nimport Youtube from 'react-youtube'\nimport { VideoContext } from './context/VideoContext';\nimport useWindowDimensions from './hooks/windowDimensions'\n\n// https://www.youtube.com/watch?v=fHy7K4xIO-g\n\nfunction App() {\n  const videoContext = useContext(VideoContext);\n\n  return (\n    <div className='wrapper'>\n      <div className='header'>\n        <h1>Make a comment on</h1>\n        <span>YouTube videos with blocked comments</span>\n      </div>\n      <div className='content'>\n        <div className='top'>\n          <LinkInput changeURL={videoContext.changeURL}/>\n          <VideoPlayer videoData={videoContext.videoData} />\n        </div>\n        <CommentSection videoContext={videoContext} />\n      </div>\n    </div>\n  );\n}\n\n\nfunction CommentSection(props) {\n  const videoData = props.videoContext.videoData\n  const addComment = props.videoContext.addComment\n\n  if (videoData === null) {\n    return null\n  }\n  return (\n    <div className='comments-section'>\n      <MakeComment addComment={addComment}/>\n      <Comments comments={videoData.comments}/>\n    </div>\n  )\n}\n\n\nfunction MakeComment(props) {\n  const {register, handleSubmit } = useForm();\n  const onSubmit = data => props.addComment(data);\n\n  return (\n    <form\n      className='form2'\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <span>Username:</span>\n      <input  \n        className='input-field'\n        {...register('username', { required: true, maxLength: 64 })} \n      />\n      <span>Comment:</span>\n      <textarea\n        className='input-area'\n        {...register('body', { required: true, maxLength: 10000 })} \n      />\n      <input \n        type='submit'\n        className='submit-btn'\n      />\n    </form>\n  )\n}\n\n\nfunction Comments(props) {\n  const comments = props.comments\n  // Sorts by id descending\n  comments.sort((a, b) => b.id - a.id);\n  return (\n    <div className='comments'>\n      {comments.map(comment => <Comment comment={comment} key={comment.id}/>)}\n    </div>\n  )\n}\n\n\nfunction Comment(props) {\n  const comment = props.comment\n  return (\n    <div className='comment'>\n      <div className='comment-top'>\n        <span className='username'>{comment.username}</span>\n        <span>{comment.date}</span>\n      </div>\n      <div className='comment-body'>\n        <span>{comment.body}</span>\n      </div>\n    </div>\n  )\n}\n\n\nfunction LinkInput(props) {\n  const {register, handleSubmit } = useForm();\n  const onSubmit = data => props.changeURL(data.link);\n\n  return (\n    <form\n      className='form1'\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input  \n        className='input-field'\n        {...register('link')} \n      />\n      <input \n        type='submit'\n        className='submit-btn'\n      />\n    </form>\n  )\n}\n\n\nfunction VideoPlayer(props) {\n  const videoID = props.videoData === null ? null: props.videoData.videoID\n  const { width } = useWindowDimensions();\n\n  let opts = {}\n\n  if (width < 520) {\n    opts = {\n      width: '320',\n      height: '240'\n    };\n  } else {\n    opts = {\n      width: '480',\n      height: '320'\n    };\n  }\n\n  return (\n    <div className='video'>\n      {videoID ? <Youtube videoId={videoID} opts={opts} />: null}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { VideoContextProvider } from './context/VideoContext'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <VideoContextProvider>\n      <App />\n    </VideoContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}